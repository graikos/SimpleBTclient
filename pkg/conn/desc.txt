1. Service starts connection to peer
2. Handshake is performed and connection is established and kept
3. FSM is initiated, along with event queue
4. By default, async listen for incoming conn messages
5. By default, async handling events from queue

Handling events will block when bitfield is received, subsequently
blocking `listen` if new messages are received in the meantime


Listen will listen on the connection and add any messages
it receives as an event in the queue

Meanwhile, the evenHandler goroutine is running and will apply
the transition to the FSM and the output will determine the 
handler that will run

Bitfield even handler will block, as expected to wait

Interested will run in the main evenHandler goroutine

requests will be executed on a separate goroutine so the handler
can handle possible incoming piece messages

sig channel of event will be used for sync